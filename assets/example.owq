
// [ ] BUG -> pointer count only ones.
// [ ] a[-1]
// [x] Treat any value as numeric in array path.
// [x] a += 4
// [x] a -= 5
// [x] rearange compiler lib
// [x] Pointer can't point to array ele and array ele can't hold pointer.
// [x] rearrange sysfuncs struct
// [ ] unset arrays handlers.
// [x] array scoping 
// [ ] print 5,6,7;
// [ ] isset a[1]; <- isset value check if its defined
// [ ] continue
// [ ] a.erase(3)
// [ ] Array.keep(string); <- keep only types : STRING, NUMBER, ARRAY, NULL
// [ ] Array.unique();
// [ ] Array.remove(from{str, int, array})
// [ ] Array.find({str, int, array}) <- find first return index
// [ ] Array.keep({str, int, array})
// [ ] Array.count({str, int, array}) <- number of times we find
// [ ] Array.merge({Array}) <- number of times we find
// [ ] a.sort();
// [ ] a.fill(); // String or Array filled with a value -> for String any Data will be represented as char.
// [x] String.split(",");   <- by char, all chars, number means slice
// [x] Array.join("-");     <- Merge array to string with spacer.
// [x] Array.highest();     <- Find the highest numeric value.
// [x] Array.lowest();      <- Find the lowest numeric value.
// [ ] String.tolower();
// [ ] String.toupper();
// [ ] Number.round(Int);
// [ ] Number.round(Int);
// [ ] Number.floor(Int);
// [ ] Number.ceil(Int);

let a = "OwQ Is Amazing 414";
print(a);
print(a.tolower());
let b = a.toupper();
print(b);